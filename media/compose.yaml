# copyied from https://github.com/Rick45/quick-arr-Stack/blob/main/docker-compose.yml just to work off of
version: '3.4'
services:
  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    # line above must be uncommented to allow external containers to connect.
    # See https://github.com/qdm12/gluetun-wiki/blob/main/setup/connect-a-container-to-gluetun.md#external-container-to-gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - 8888:8888/tcp # HTTP proxy
      - 8388:8388/tcp # Shadowsocks
      - 8388:8388/udp # Shadowsocks
    volumes:
      - /yourpath:/gluetun
    environment:
      # See https://github.com/qdm12/gluetun-wiki/tree/main/setup#setup
      - VPN_SERVICE_PROVIDER=airvpn
      - VPN_TYPE=wireguard
      - WIREGUARD_PRIVATE_KEY=key
      - WIREGUARD_PRESHARED_KEY=key
      - WIREGUARD_ADDRESSES=address
      - SERVER_COUNTRIES=Canada

  deluge:
    container_name: deluge
    image: 'linuxserver/deluge:latest'
    restart: unless-stopped
    environment:
      - 'PUID=${PUID}'
      - 'PGID=${PGID}'
      - 'TZ=${TZ}'
    volumes:
      - '${ROOT}/MediaCenter/config/deluge:/config'
      - '/mnt/user/data:/data'
    network_mode: 'service:gluetun'
    
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - 'TZ=${TZ}'
    volumes:
      - '${ROOT}/MediaCenter/config/prowlarr:/config'
    restart: unless-stopped
    ports:
      - '9696:9696' #uncomment if you are not using the VPN

  sonarr:
    container_name: sonarr
    image: 'linuxserver/sonarr:latest'
    restart: unless-stopped
    network_mode: host
    environment:
      - 'PUID=${PUID}'
      - 'PGID=${PGID}'
      - 'TZ=${TZ}'
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '${ROOT}/MediaCenter/config/sonarr:/config'
      - '${HDDSTORAGE}:/MediaCenterBox'
  radarr:
    container_name: radarr
    image: 'linuxserver/radarr:latest'
    restart: unless-stopped
    network_mode: host
    environment:
      - 'PUID=${PUID}'
      - 'PGID=${PGID}'
      - 'TZ=${TZ}'
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '${ROOT}/MediaCenter/config/radarr:/config'
      - '${HDDSTORAGE}:/MediaCenterBox'
      
  bazarr:
    container_name: bazarr
    image: 'linuxserver/bazarr:latest'
    restart: unless-stopped
    #network_mode: host
    environment:
      - 'PUID=${PUID}'
      - 'PGID=${PGID}'
      - 'TZ=${TZ}'
      - UMASK_SET=022
    volumes:
      - '${ROOT}/MediaCenter/config/bazarr:/config'
      - '${HDDSTORAGE}:/MediaCenterBox'
    ports:
      - '6767:6767'
      
  plex-server:
    container_name: plex-server
    image: 'plexinc/pms-docker:latest'
    restart: unless-stopped
    environment:
      - 'TZ=${TZ}'
    network_mode: host
    volumes:
      - '${ROOT}/MediaCenter/config/plex/db:/config'
      - '${ROOT}/MediaCenter/config/plex/transcode:/transcode'
      - '${HDDSTORAGE}/Completed:/MediaCenterBox'


### Optional Containers

  
  overseerr:
    image: 'sctx/overseerr:latest'
    container_name: overseerr
    environment:
      - LOG_LEVEL=debug
      - 'TZ=${TZ}'
    ports:
      - '5055:5055'
    volumes:
      - '${ROOT}/MediaCenter/config/overseerr/config:/app/config'
    restart: unless-stopped
