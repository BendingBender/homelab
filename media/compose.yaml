#WORK IN PROGRESS (NEED A TON OF WORK AND TESTING)
version: '3.9'
services:
  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - 8888:8888/tcp # HTTP proxy
      - 8388:8388/tcp # Shadowsocks
      - 8388:8388/udp # Shadowsocks
      - 8000:8000/tcp # Build-in HTTP control header
      # other container ports
      - 6789:6789/tpc # nzbget
      - 5055:5055/tcp # overseer
      - 6767:6767/tcp # bazarr
      - 8989:8989/tcp # sonarr
      - 7878:7878/tcp # radarr
      - 8686:8686/tcp # lidarr
      - 9696:9696/tcp # prowlarr
    volumes:
      - /yourpath:/gluetun
    environment:
      # See https://github.com/qdm12/gluetun-wiki/tree/main/setup#setup for more information or switching to OpenVPN
      - VPN_SERVICE_PROVIDER=airvpn
      - VPN_TYPE=wireguard
      - WIREGUARD_PRIVATE_KEY=key
      - WIREGUARD_PRESHARED_KEY=key
      - WIREGUARD_ADDRESSES=address
      - SERVER_COUNTRIES=Canada
    sysctls:
      # wg-quick fails to set this without --privileged, so set it here instead if needed
      - net.ipv4.conf.all.src_valid_mark=1
      # May as well disable ipv6. Should be blocked anyway.
      - net.ipv6.conf.default.disable_ipv6=1
      - net.ipv6.conf.all.disable_ipv6=1
      - net.ipv6.conf.lo.disable_ipv6=1
      # The container has no recovery logic. Use a healthcheck to catch disconnects.
    healthcheck:
      test: ping -c 1 www.google.com || exit 1
      interval: 60s
      timeout: 20s
      retries: 5
    restart: unless-stopped

  deluge:
    container_name: deluge
    image: 'linuxserver/deluge:latest'
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
    volumes:
      - '${ROOT}/MediaCenter/config/deluge:/config'
      - '/mnt/user/data:/data'
    network_mode: 'service:gluetun'

  nzbget:
    image: lscr.io/linuxserver/nzbget:latest
    container_name: nzbget
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
      - NZBGET_USER=nzbget #optional
      - NZBGET_PASS=password #optional
    volumes:
      - /path/to/nzbget/data:/config
      - /path/to/downloads:/downloads #optional
    restart: unless-stopped
    network_mode: 'service:gluetun'
    
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
    volumes:
      - '${ROOT}/MediaCenter/config/prowlarr:/config'
    restart: unless-stopped
    network_mode: "service:gluetun"

  sonarr:
    container_name: sonarr
    image: 'linuxserver/sonarr:latest'
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '${ROOT}/MediaCenter/config/sonarr:/config'
      - '${HDDSTORAGE}:/MediaCenterBox'
    network_mode: "service:gluetun"
  
  radarr:
    container_name: radarr
    image: 'linuxserver/radarr:latest'
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '${ROOT}/MediaCenter/config/radarr:/config'
      - '${HDDSTORAGE}:/MediaCenterBox'
    network_mode: "service:gluetun"

  lidarr:
    container_name: lidarr
    image: linuxserver/lidarr
    network_mode: "service:vpn"
    restart: unless-stopped
    volumes:
      - ./config/Lidarr:/config
      - /local/path/to/Music:/mnt/Music
    environment:
     - PUID=1000
     - PGID=1000
     - TZ=America/Los_Angeles
    network_mode: "service:gluetun"
  
  bazarr:
    container_name: bazarr
    image: 'linuxserver/bazarr:latest'
    restart: unless-stopped
    #network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
      - UMASK_SET=022
    volumes:
      - '${ROOT}/MediaCenter/config/bazarr:/config'
      - '${HDDSTORAGE}:/MediaCenterBox'
    network_mode: "service:gluetun"
  

### Media Streaming Stacks ###
# You can spin up your media streaming instance directly from
# this docker compose stack. Feel free to remove these if you
# already have something running. Also, I recommened picking 
# one of the stacks and removeing the other. However, I do run
# both as Plex has disadvantanges when the internet goes offline.

### Plex Stack ###

  overseerr:
    image: 'sctx/overseerr:latest'
    container_name: overseerr
    environment:
      - LOG_LEVEL=debug
      - TZ=America/Los_Angeles
    ports:
      - '5055:5055'
    volumes:
      - '${ROOT}/MediaCenter/config/overseerr/config:/app/config'
    restart: unless-stopped
  plex-server:
    container_name: plex-server
    image: 'plexinc/pms-docker:latest'
    restart: unless-stopped
    environment:
      - TZ=America/Los_Angeles
    network_mode: host
    volumes:
      - '${ROOT}/MediaCenter/config/plex/db:/config'
      - '${ROOT}/MediaCenter/config/plex/transcode:/transcode'
      - '${HDDSTORAGE}/Completed:/MediaCenterBox'

### End of Plex Stack ###

### Jellyfin Stack ###

### End of Jellyfin Stack ###

### tubearchivist Stack ###
# 
# wip
# 

  tubearchivist:
    container_name: tubearchivist
    restart: unless-stopped
    image: bbilly1/tubearchivist
    ports:
      - 8000:8000
    volumes:
      - /media/data/youtube:/youtube
      - /media/data/cache:/cache
    environment:
      - ES_URL=http://archivist-es:9200     # needs protocol e.g. http and port
      - REDIS_HOST=archivist-redis          # don't add protocol
      - HOST_UID=1000
      - HOST_GID=1000
      - TA_HOST=tubearchivist.local         # set your host name
      - TA_USERNAME=tubearchivist           # your initial TA credentials
      - TA_PASSWORD=verysecret              # your initial TA credentials
      - ELASTIC_PASSWORD=verysecret         # set password for Elasticsearch
      - TZ=America/New_York                 # set your time zone
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 2m
      timeout: 10s
      retries: 3
      start_period: 30s
    depends_on:
      - archivist-es
      - archivist-redis
  archivist-redis:
    image: redis/redis-stack-server
    container_name: archivist-redis
    restart: unless-stopped
    expose:
      - "6379"
    volumes:
      - redis:/data
    depends_on:
      - archivist-es
  archivist-es:
    image: bbilly1/tubearchivist-es # only for amd64, or use official es 8.13.2
    container_name: archivist-es
    restart: unless-stopped
    environment:
      - "ELASTIC_PASSWORD=verysecret" # matching Elasticsearch password
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "xpack.security.enabled=true"
      - "discovery.type=single-node"
      - "path.repo=/usr/share/elasticsearch/data/snapshot"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es:/usr/share/elasticsearch/data    # check for permission error when using bind mount, see readme
    expose:
      - "9200"

volumes:
  cache:
  redis:
  es:

